// Code generated by MockGen. DO NOT EDIT.
// Source: services/build.go

// Package interfaces is a generated GoMock package.
package interfaces

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/hbalmes/ci_cd-api/api/models"
	webhook "github.com/hbalmes/ci_cd-api/api/models/webhook"
	apierrors "github.com/hbalmes/ci_cd-api/api/utils/apierrors"
	reflect "reflect"
)

// MockBuildService is a mock of BuildService interface
type MockBuildService struct {
	ctrl     *gomock.Controller
	recorder *MockBuildServiceMockRecorder
}

// MockBuildServiceMockRecorder is the mock recorder for MockBuildService
type MockBuildServiceMockRecorder struct {
	mock *MockBuildService
}

// NewMockBuildService creates a new mock instance
func NewMockBuildService(ctrl *gomock.Controller) *MockBuildService {
	mock := &MockBuildService{ctrl: ctrl}
	mock.recorder = &MockBuildServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBuildService) EXPECT() *MockBuildServiceMockRecorder {
	return m.recorder
}

// ProcessBuild mocks base method
func (m *MockBuildService) ProcessBuild(config *models.Configuration, payload *webhook.Status) (*models.Build, apierrors.ApiError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessBuild", config, payload)
	ret0, _ := ret[0].(*models.Build)
	ret1, _ := ret[1].(apierrors.ApiError)
	return ret0, ret1
}

// ProcessBuild indicates an expected call of ProcessBuild
func (mr *MockBuildServiceMockRecorder) ProcessBuild(config, payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessBuild", reflect.TypeOf((*MockBuildService)(nil).ProcessBuild), config, payload)
}
